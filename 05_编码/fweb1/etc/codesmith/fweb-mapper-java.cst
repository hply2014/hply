<%-- 
Name:
Author: 成七一
Description: Mybatis Mapper Java GENERATE TEMPLATE FOR FWEB（FOREVER WEB RAPID FRAMEWORK）
CreateTime：2014年7月17日 13:34:46
--%>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System" %>
<%@ Import Namespace="System" %>
<%@ Map Name="JavaAlias" Src="mysql-java-alias" %>

<%@ Template Language="C#" TargetLanguage="Java" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Database" Description="只能选择一个表." %>
<%@ Property Name="NameSpace" Type="System.String" Category="Context" Default="org.hhwy.rdc.fweb1" %>
<%@ Property Name="Author" Type="System.String" Category="Context" Default="cqiyi" %>
/**
  * @ <%=Author%> create in <%=System.DateTime.Now%> by Template
  * This class generated by Forever Web Rapid Framework Code Generator
  */
  
package <%=NameSpace%>.mapper;

import java.util.List;
import java.util.Map;
import org.springframework.stereotype.Repository;
import <%=NameSpace%>.domain.<%=GetDomainClassName()%>;



/**
  * 数据表： [<%=SourceTable.Name%>]
  * <%=SourceTable.Description %>
  */
@Repository
public interface <%=GetDomainClassName()%>Mapper {

	  public void insert(<%=GetDomainClassName()%> <%=GetDomainVariableName()%>);
	  
	  public void update(<%=GetDomainClassName()%> <%=GetDomainVariableName()%>);
	  
	  public void delete(String id);
	  
	  public <%=GetDomainClassName()%> get(String id);
      
	  public int getVersion(String id);
	  
	  public List<<%=GetDomainClassName()%>> getAll();
}

<script runat="template">
    public override string GetFileName() {
        return GetDomainClassName() + "Mapper.java";
    }
    
    public string GetDomainClassName() {
        return StringUtil.ToPascalCase(SourceTable.Name.TrimStart("t_".ToCharArray()));
    }
    
    public string GetDomainVariableName() {
        return StringUtil.ToCamelCase(SourceTable.Name.TrimStart("t_".ToCharArray()));
    }
    
    public string GetJavaType(ColumnSchema col) {
        try{
            return JavaAlias[col.NativeType];
        }catch(Exception ex){
            return col.NativeType + "[N/A]";
        }
    }
</script>