<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hply.mapper.PaymentMapper">

  <insert id="insert" parameterType="Payment">
    insert into t_payment(id, project_id, ticket_code, pay_type, payment_item_id, amount, bank_account, bank_name, trice, create_time, create_user, update_time, update_user, description, status, field_01, field_02, field_03, field_04, field_05) values ( #{id}, #{projectId}, #{ticketCode}, #{payType}, #{paymentItemId}, #{amount}, #{bankAccount}, #{bankName}, #{trice}, now(), #{createUser}, now(), #{createUser}, #{description}, #{status}, #{field01}, #{field02}, #{field03}, #{field04}, #{field05} )
  </insert>

  <update id="update" parameterType="map">
    update t_payment set <if test="projectId != ''">project_id = #{projectId},</if> <if test="ticketCode != ''">ticket_code = #{ticketCode},</if> <if test="payType != ''">pay_type = #{payType},</if> <if test="paymentItemId != ''">payment_item_id = #{paymentItemId},</if> <if test="amount != null">amount = #{amount},</if> <if test="bankAccount != ''">bank_account = #{bankAccount},</if> <if test="bankName != ''">bank_name = #{bankName},</if> <if test="trice != null">trice = #{trice},</if>  update_time = now(), <if test="updateUser != ''">update_user = #{updateUser},</if> <if test="description != ''">description = #{description},</if> <if test="status != null">status = #{status},</if> <if test="field01 != ''">field_01 = #{field01},</if> <if test="field02 != ''">field_02 = #{field02},</if> <if test="field03 != ''">field_03 = #{field03},</if> <if test="field04 != ''">field_04 = #{field04},</if> <if test="field05 != ''">field_05 = #{field05},</if> version = version + 1 where id = #{id}
  </update>

  <delete id="delete" parameterType="string">
    delete from t_payment where id = #{id}
  </delete>

  <select id="get" parameterType="string" resultType="Payment">
    select id as id, project_id as projectId, ticket_code as ticketCode, pay_type as payType, payment_item_id as paymentItemId, amount as amount, bank_account as bankAccount, bank_name as bankName, trice as trice, create_time as createTime, create_user as createUser, update_time as updateTime, update_user as updateUser, description as description, version as version, status as status, field_01 as field01, field_02 as field02, field_03 as field03, field_04 as field04, field_05 as field05 from t_payment where id = #{id}
  </select>
  
  <select id="getVersion" parameterType="string" resultType="int">
    select version from t_payment where id = #{id}
  </select>

  <select id="getAll" resultType="Payment">
    select id as id, project_id as projectId, ticket_code as ticketCode, pay_type as payType, payment_item_id as paymentItemId, amount as amount, bank_account as bankAccount, bank_name as bankName, trice as trice, create_time as createTime, create_user as createUser, update_time as updateTime, update_user as updateUser, description as description, version as version, status as status, field_01 as field01, field_02 as field02, field_03 as field03, field_04 as field04, field_05 as field05 from t_payment
  </select>

</mapper>

