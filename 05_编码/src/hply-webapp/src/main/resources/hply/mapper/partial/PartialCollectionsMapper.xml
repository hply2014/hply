<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hply.mapper.partial.PartialCollectionsMapper">

  <cache />
  
  <insert id="insert" parameterType="Collections">
    insert into t_collections(id, project_id, ticket_code, source_of, payment_type, amount, bank_account, bank_name, trice, create_time, create_user, update_time, update_user, description, status) values ( #{id}, #{projectId}, #{ticketCode}, #{sourceOf}, #{paymentType}, #{amount}, #{bankAccount}, #{bankName}, #{trice}, now(), #{createUser}, now(), #{createUser}, #{description}, #{status} )
  </insert>

  <update id="update" parameterType="map">
    update t_collections set project_id = #{projectId}, ticket_code = #{ticketCode}, source_of = #{sourceOf}, payment_type = #{paymentType}, amount = #{amount}, bank_account = #{bankAccount}, bank_name = #{bankName}, trice = #{trice},  update_time = now(), update_user = #{updateUser}, description = #{description}, status = #{status}, version = version + 1 where id = #{id}
  </update>

  <delete id="delete" parameterType="string">
    delete from t_collections where id = #{id}
  </delete>

  <select id="get" parameterType="string" resultType="Collections">
    select id as id, project_id as projectId, ticket_code as ticketCode, source_of as sourceOf, payment_type as paymentType, amount as amount, bank_account as bankAccount, bank_name as bankName, trice as trice, create_time as createTime, create_user as createUser, update_time as updateTime, update_user as updateUser, description as description, version as version, status as status from t_collections where id = #{id}
  </select>
  
  <select id="getVersion" parameterType="string" resultType="int">
    select version from t_collections where id = #{id}
  </select>
  
  <select id="getAll" resultType="Collections">
    select id as id, project_id as projectId, ticket_code as ticketCode, source_of as sourceOf, payment_type as paymentType, amount as amount, bank_account as bankAccount, bank_name as bankName, trice as trice, create_time as createTime, create_user as createUser, update_time as updateTime, update_user as updateUser, description as description, version as version, status as status from t_collections order by trice desc
  </select>
  
  <select id="getRowCount" resultType="int">
    select count(*) from t_collections
  </select>

  <select id="getAllPaged" resultType="Collections">
    select id as id, project_id as projectId, ticket_code as ticketCode, source_of as sourceOf, payment_type as paymentType, amount as amount, bank_account as bankAccount, bank_name as bankName, trice as trice, create_time as createTime, create_user as createUser, update_time as updateTime, update_user as updateUser, description as description, version as version, status as status from t_collections order by trice desc limit #{pageSize} offset #{pageIndex}
  </select>
</mapper>

