<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hply.mapper.ProjectSummaryMapper">
	<!-- 项目汇总报表full 按月，根据项目分类汇总 -->
	<select id="getSummaryByMonth" resultType="ProjectSummary">
		select
		id,serial_id as serialId,trice,description,project_id as projectId,
		organization_id as organizationId,project_code projectCode,
		project_name projectName,(select manager from t_project where id=t.project_id)  field03,
		contract_tax_rate as contractTaxRate,contract_type as contractType,
		contract_amount as contractAmount,change_amount as changeAmount,
		change_total_amount as changeTotalAmount,settlement_amount as settlementAmount,
		management_rate as managementRate,management_plan_amount as managementPlanAmount,
		(select ifnull(sum(amount),0) from t_collections where source_of = '管理费' and project_id = t.project_id 
		and date(trice) between date(concat(#{p1}, '-01')) and (date(concat(#{p2}, '-01')) + interval 1 month - interval 1 day)) as managementRealAmount,
		(select ifnull(sum(amount),0) from t_collections where source_of = '管理费' and project_id=t.project_id) as managementTotalAmount,
		management_owe_amount as managementOweAmount,party_billing_amount as partyBillingAmount,
		party_billing_total_amount as partyBillingTotalAmount,party_billing_output_tax_amount as partyBillingOutputTaxAmount,
		collections_amount as collectionsAmount,collections_total_amount as collectionsTotalAmount,
		collections_total_project_amount as collectionsTotalProjectAmount,collections_total_income_amount as collectionsTotalIncomeAmount,
		collections_rate as collectionsRate,customer_billing_amount as customerBillingAmount,
		customer_billing_total_amount as customerBillingTotalAmount,customer_billing_input_tax_amount as customerBillingInputTaxAmount,
		payment_amount as paymentAmount,payment_total_amount as paymentTotalAmount,
		(select ifnull(sum(amount),0) from t_payment_different_tax_amount where payment_id in (select distinct id from t_payment where project_id =t.project_id) 
		and date(create_time) between date(concat(#{p1}, '-01')) and (date(concat(#{p2}, '-01')) + interval 1 month - interval 1 day)) as paymentDifferentTaxAmount,
		tax_rate as taxRate, tax_bearing_amount as taxBearingAmount,tax_plan_amount as taxPlanAmount,tax_real_amount as taxRealAmount,
		tax_total_amount as taxTotalAmount,tax_owe_amount as taxOweAmount,
		arrears_amount as arrearsAmount,expected_value_ton as expectedValueTon,
		expected_value_square_meter as expectedValueSquareMeter,profile_point as profilePoint,
		ifnull(total_others_amount, 0) field01,management_real_amount + ifnull(total_others_amount, 0) field02,
		version, create_time as createTime, table_name as tableName, contract_date as contractDate, 
		tax_bearing_rate as taxBearingRate, vat_additional_coefficient as vatAdditionalCoefficient, 
		(select ifnull(sum(amount),0) from t_payment where date(create_time) between date(concat(#{p1}, '-01')) and (date(concat(#{p2}, '-01')) + interval 1 month - interval 1 day)
		and project_id = t.project_id and payment_item_id='070de123-e839-43ab-84b8-3705d6d03bd1') as taxBearingRealAmount, 
		tax_bearing_total_real_amount as taxBearingTotalRealAmount, collections_total_project_amount as collectionsTotalProjectAmount, 
		collections_total_income_amount as collectionsTotalIncomeAmount, collections_total_other_amount as collectionsTotalOtherAmount, 
		payment_total_different_tax_amount as paymentTotalDifferentTaxAmount
		from (
		select
		s.*,(select sum(amount) from t_collections where source_of='其他' and project_id=s.project_id 
		  and date(trice) between date(concat(#{p1}, '-01')) and (date(concat(#{p2}, '-01')) + interval 1 month - interval 1 day)) total_others_amount from
		t_project_summary s
		where date(trice) between date(concat(#{p1}, '-01')) and (date(concat(#{p2}, '-01')) + interval 1 month - interval 1 day)
		and organization_id = #{organizationId} and project_id in (select id from t_project)
		and serial_id in (select max(serial_id) from t_project_summary 
		where date(trice) between date(concat(#{p1}, '-01')) and (date(concat(#{p2}, '-01')) + interval 1 month - interval 1 day)
		and organization_id = #{organizationId} group by project_id)
		) t
		order by field_02,CAST(field_03 AS decimal(20,4))
	</select>

	<!-- month -->
	<select id="getSummaryByCurrentMonth" resultType="ProjectSummary">
		select
		id,serial_id as serialId,trice,description,project_id as projectId,
		organization_id as organizationId,project_code projectCode,
		project_name projectName,(select manager from t_project where id=t.project_id)  field03,
		contract_tax_rate as contractTaxRate,contract_type as contractType,
		contract_amount as contractAmount,sum(change_amount) as changeAmount,
		change_total_amount as changeTotalAmount,settlement_amount as settlementAmount,
		management_rate as managementRate,management_plan_amount as managementPlanAmount,
		(select ifnull(sum(amount),0) from t_collections where source_of = '管理费' and project_id = t.project_id 
		and date(trice) between date(concat(#{p1}, '-01')) and (date(concat(#{p1}, '-01')) + interval 1 month - interval 1 day)) as managementRealAmount,
		(select ifnull(sum(amount),0) from t_collections where source_of = '管理费' and project_id=t.project_id) as managementTotalAmount,
		management_owe_amount as managementOweAmount,party_billing_amount as partyBillingAmount,
		party_billing_total_amount as partyBillingTotalAmount,party_billing_output_tax_amount as partyBillingOutputTaxAmount,
		sum(collections_amount) as collectionsAmount,collections_total_amount as collectionsTotalAmount,
		collections_total_project_amount as collectionsTotalProjectAmount,collections_total_income_amount as collectionsTotalIncomeAmount,
		collections_rate as collectionsRate,customer_billing_amount as customerBillingAmount,
		customer_billing_total_amount as customerBillingTotalAmount,customer_billing_input_tax_amount as customerBillingInputTaxAmount,
		sum(payment_amount) as paymentAmount,payment_total_amount as paymentTotalAmount,
		(select ifnull(sum(amount),0) from t_payment_different_tax_amount where payment_id in (select distinct id from t_payment where project_id =t.project_id) 
		and date(create_time) between date(concat(#{p1}, '-01')) and (date(concat(#{p1}, '-01')) + interval 1 month - interval 1 day)) as paymentDifferentTaxAmount,
		tax_rate as taxRate, tax_bearing_amount as taxBearingAmount,tax_plan_amount as taxPlanAmount,sum(tax_real_amount) as taxRealAmount,
		tax_total_amount as taxTotalAmount,tax_owe_amount as taxOweAmount,
		sum(arrears_amount) as arrearsAmount,sum(expected_value_ton) as expectedValueTon,
		sum(expected_value_square_meter) as expectedValueSquareMeter,profile_point as profilePoint,
		ifnull(total_others_amount, 0) field01,sum(management_real_amount) + ifnull(total_others_amount, 0) field02,
		version, create_time as createTime, table_name as tableName, contract_date as contractDate, 
		tax_bearing_rate as taxBearingRate, vat_additional_coefficient as vatAdditionalCoefficient, 
		(select ifnull(sum(amount),0) from t_payment where date(create_time) between date(concat(#{p1}, '-01')) and (date(concat(#{p1}, '-01')) + interval 1 month - interval 1 day)
		and project_id = t.project_id and payment_item_id='070de123-e839-43ab-84b8-3705d6d03bd1') as taxBearingRealAmount, 
		tax_bearing_total_real_amount as taxBearingTotalRealAmount, collections_total_project_amount as collectionsTotalProjectAmount, 
		collections_total_income_amount as collectionsTotalIncomeAmount, collections_total_other_amount as collectionsTotalOtherAmount, 
		payment_total_different_tax_amount as paymentTotalDifferentTaxAmount
		from (
		select s.*,(select sum(amount) from t_collections where source_of='其他' and project_id=s.project_id)
		total_others_amount from t_project_summary s
		where date(contract_date) between date(concat(#{p1}, '-01')) and (date(concat(#{p1}, '-01')) + interval 1 month - interval 1 day)
		and organization_id = #{organizationId} and project_id in (select id from t_project)
		order by s.serial_id desc
		) t 
		group by project_id order by serial_id
	</select>

	<select id="getMonths" resultType="string">
		select distinct date_format(date(trice), '%Y-%m') from t_project_summary order by trice desc
	</select>

	<select id="getSummaryByProject" resultType="ProjectSummary">
		select 
		id,
		serial_id as serialId,
		trice,
		description,
		project_id as projectId,
		organization_id as organizationId,
		project_code as projectCode,
		project_name as projectName,
		contract_amount as contractAmount,
		change_amount as changeAmount,
		change_total_amount as changeTotalAmount,
		settlement_amount as settlementAmount,
		management_rate as managementRate,
		management_plan_amount as managementPlanAmount,
		management_real_amount as managementRealAmount,
		management_total_amount as managementTotalAmount,
		management_owe_amount as managementOweAmount,
		party_billing_amount as partyBillingAmount,
		party_billing_total_amount as partyBillingTotalAmount,
		collections_amount as collectionsAmount,
		collections_total_amount as collectionsTotalAmount,
		collections_rate as collectionsRate,
		customer_billing_amount as customerBillingAmount,
		customer_billing_total_amount as customerBillingTotalAmount,
		payment_amount as paymentAmount,
		payment_total_amount as paymentTotalAmount,
		tax_rate as taxRate,
		tax_plan_amount as taxPlanAmount,
		tax_real_amount as taxRealAmount,
		tax_total_amount as taxTotalAmount,
		tax_owe_amount as taxOweAmount,
		arrears_amount as arrearsAmount,
		expected_value as expectedValue,
		profile_point as profilePoint,
		version,
		create_time as createTime,
		table_name as tableName,
		party_billing_output_tax_amount as partyBillingOutputTaxAmount, 
		customer_billing_input_tax_amount as customerBillingInputTaxAmount, 
		payment_different_tax_amount as paymentDifferentTaxAmount, 
		tax_bearing_amount as taxBearingAmount,
		contract_tax_rate as contractTaxRate, contract_type as contractType, 
		expected_value_ton as expectedValueTon, expected_value_square_meter as expectedValueSquareMeter, 
		contract_date as contractDate, tax_bearing_rate as taxBearingRate, vat_additional_coefficient as vatAdditionalCoefficient, 
		tax_bearing_real_amount as taxBearingRealAmount, 
		tax_bearing_total_real_amount as taxBearingTotalRealAmount, collections_total_project_amount as collectionsTotalProjectAmount, 
		collections_total_income_amount as collectionsTotalIncomeAmount, collections_total_other_amount as collectionsTotalOtherAmount, 
		payment_total_different_tax_amount as paymentTotalDifferentTaxAmount
		from t_project_summary where project_id=#{projectId} AND VERSION >= 0
		order by serial_id desc limit 1
	</select>

	<select id="getRowCountByOrganization" resultType="int">
		select count(*) from t_project_summary where
		organization_id=#{organizationId}
	</select>

	<select id="getAllPagedByOrganization" resultType="ProjectSummary">
		select id as id, serial_id as serialId, trice as trice,
		description as description, project_id as projectId, organization_id
		as organizationId, project_code as projectCode,
		project_name as projectName, contract_amount as contractAmount,
		change_amount as changeAmount, change_total_amount as
		changeTotalAmount, settlement_amount as settlementAmount,
		management_rate as managementRate, management_plan_amount as
		managementPlanAmount, management_real_amount as
		managementRealAmount, management_total_amount as managementTotalAmount,
		management_owe_amount as managementOweAmount,
		party_billing_amount as partyBillingAmount, party_billing_total_amount as
		partyBillingTotalAmount, collections_amount
		as collectionsAmount, collections_total_amount as collectionsTotalAmount,
		collections_rate as collectionsRate,
		customer_billing_amount as customerBillingAmount, customer_billing_total_amount as
		customerBillingTotalAmount,
		payment_amount as paymentAmount, payment_total_amount as paymentTotalAmount, tax_rate as
		taxRate, tax_plan_amount as
		taxPlanAmount, tax_real_amount as taxRealAmount, tax_total_amount as taxTotalAmount,
		tax_owe_amount as taxOweAmount,
		arrears_amount as arrearsAmount, expected_value as expectedValue, profile_point as
		profilePoint, version as version,
		create_time as createTime, table_name as tableName, 
		party_billing_output_tax_amount as partyBillingOutputTaxAmount, 
		customer_billing_input_tax_amount as customerBillingInputTaxAmount, 
		payment_different_tax_amount as paymentDifferentTaxAmount, 
		tax_bearing_amount as taxBearingAmount, 
		contract_tax_rate as contractTaxRate, contract_type as contractType, 
		expected_value_ton as expectedValueTon, expected_value_square_meter as expectedValueSquareMeter, 
		contract_date as contractDate, tax_bearing_rate as taxBearingRate, vat_additional_coefficient as vatAdditionalCoefficient, 
		tax_bearing_real_amount as taxBearingRealAmount, 
		tax_bearing_total_real_amount as taxBearingTotalRealAmount, collections_total_project_amount as collectionsTotalProjectAmount, 
		collections_total_income_amount as collectionsTotalIncomeAmount, collections_total_other_amount as collectionsTotalOtherAmount, 
		payment_total_different_tax_amount as paymentTotalDifferentTaxAmount
		from t_project_summary where
		organization_id=#{organizationId} and project_id in (select id from t_project) order by serial_id desc limit
		#{pageSize}
		offset #{pageIndex}
	</select>


	<select id="getHistoryByProject" resultType="ProjectSummary">
		select id as id, serial_id as serialId, trice as
		trice,
		description as
		description, project_id as projectId, organization_id
		as organizationId, project_code as
		projectCode,
		project_name as
		projectName, contract_amount as contractAmount,
		change_amount as changeAmount,
		change_total_amount as
		changeTotalAmount,
		settlement_amount as settlementAmount,
		management_rate as managementRate,
		management_plan_amount as
		managementPlanAmount, management_real_amount as
		managementRealAmount, management_total_amount
		as managementTotalAmount,
		management_owe_amount as managementOweAmount,
		party_billing_amount as partyBillingAmount,
		party_billing_total_amount as
		partyBillingTotalAmount, collections_amount
		as collectionsAmount, collections_total_amount
		as collectionsTotalAmount,
		collections_rate as collectionsRate,
		customer_billing_amount as customerBillingAmount,
		customer_billing_total_amount as
		customerBillingTotalAmount,
		payment_amount as paymentAmount,
		payment_total_amount as paymentTotalAmount, tax_rate as
		taxRate, tax_plan_amount as
		taxPlanAmount, tax_real_amount as taxRealAmount,
		tax_total_amount as taxTotalAmount,
		tax_owe_amount as taxOweAmount,
		arrears_amount as arrearsAmount, expected_value as
		expectedValue, profile_point as
		profilePoint, version as version,
		create_time as createTime, table_name as tableName, field_01 as field01, field_02 as
		field02, field_03 as field03, field_04 as field04, field_05 as field05, 
		party_billing_output_tax_amount as partyBillingOutputTaxAmount, 
		customer_billing_input_tax_amount as customerBillingInputTaxAmount, 
		payment_different_tax_amount as paymentDifferentTaxAmount, 
		tax_bearing_amount as taxBearingAmount, 
		contract_tax_rate as contractTaxRate, contract_type as contractType, 
		expected_value_ton as expectedValueTon, expected_value_square_meter as expectedValueSquareMeter, 
		contract_date as contractDate, tax_bearing_rate as taxBearingRate, vat_additional_coefficient as vatAdditionalCoefficient, 
		tax_bearing_real_amount as taxBearingRealAmount, 
		tax_bearing_total_real_amount as taxBearingTotalRealAmount, collections_total_project_amount as collectionsTotalProjectAmount, 
		collections_total_income_amount as collectionsTotalIncomeAmount, collections_total_other_amount as collectionsTotalOtherAmount, 
		payment_total_different_tax_amount as paymentTotalDifferentTaxAmount
		from t_project_summary where
		project_id=#{projectId} order by serial_id desc
	</select>

	<!-- 方式1：按费用发生所在的年份统计合同额、结算额及工程数，其中：field01:年份，field02：其他收入， field03：管理费+其他收入， field04：本年度发生变化的工程数 -->
	<select id="getProjectSummaryByYears1" resultType="ProjectSummary">
		select x.year_name field01,
		sum(contract_amount)
		contractAmount,
		sum(change_amount) changeAmount,
		sum(change_total_amount) changeTotalAmount,
		sum(settlement_amount)
		settlementAmount,
		sum(management_plan_amount) managementPlanAmount,
		sum(management_real_amount) managementRealAmount,
		sum(management_total_amount) managementTotalAmount,
		sum(management_owe_amount) managementOweAmount,
		sum(party_billing_amount) partyBillingAmount,
		sum(party_billing_total_amount) partyBillingTotalAmount,
		sum(collections_amount) collectionsAmount,
		sum(collections_total_amount) collectionsTotalAmount,
		sum(customer_billing_amount) customerBillingAmount,
		sum(customer_billing_total_amount) customerBillingTotalAmount,
		sum(payment_amount) paymentAmount,
		sum(payment_total_amount) paymentTotalAmount,
		sum(tax_plan_amount) taxPlanAmount,
		sum(tax_real_amount) taxRealAmount,
		sum(tax_owe_amount) taxOweAmount,
		sum(arrears_amount) arrearsAmount,
		sum(expected_value) expectedValue,
		ifnull(sum(others_amount), 0) field02,
		sum(management_real_amount) +
		ifnull(sum(others_amount), 0) field03,
		count(*) field04
		from (select t.year_name,
		t.project_id,
		t.contract_amount,
		sum(t.change_amount) change_amount,
		t.change_total_amount,
		t.settlement_amount,
		t.management_plan_amount,
		sum(t.management_real_amount) management_real_amount,
		t.management_total_amount,
		t.management_owe_amount,
		sum(t.party_billing_amount) party_billing_amount,
		t.party_billing_total_amount,
		sum(t.collections_amount)
		collections_amount,
		t.collections_total_amount,
		sum(t.customer_billing_amount) customer_billing_amount,
		t.customer_billing_total_amount,
		sum(t.payment_amount) payment_amount,
		t.payment_total_amount,
		t.tax_plan_amount,
		sum(t.tax_real_amount) tax_real_amount,
		t.tax_owe_amount,
		sum(t.arrears_amount) arrears_amount,
		sum(t.expected_value)
		expected_value,
		(select sum(amount) from t_collections where source_of='其他' and project_id=t.project_id and
		get_year(trice)=t.year_name)
		others_amount
		from (select get_year(s.trice) year_name, s.*
		from t_project_summary s
		where
		organization_id = #{organizationId} and project_id in (select id from t_project)
		order by s .serial_id desc) t
		group by
		t.year_name, t.project_id
		) x group by x.year_name
	</select>

	<!-- 年度汇总报表year 方式2：按创建工程所在的年份统计合同额、结算额及工程数，其中：field01:年份，field02：其他收入， field03：管理费+其他收入， field04：本年度创建的工程数 -->
	<select id="getProjectSummaryByYears2" resultType="ProjectSummary">
		<!-- select x.year_name field01,
		(select sum(contract_amount) from
		t_project c where get_year(c.trice)=x.year_name and organization_id = #{organizationId})
		contractAmount,
		(select
		sum(settlement_amount) from t_project c where get_year(c.contract_date)=x.year_name and organization_id = #{organizationId})
		settlementAmount,
		sum(change_amount) changeAmount,
		sum(change_total_amount) changeTotalAmount,
		sum(management_plan_amount) managementPlanAmount,
		sum(management_real_amount) managementRealAmount,
		sum(management_total_amount) managementTotalAmount,
		sum(management_owe_amount) managementOweAmount,
		sum(party_billing_amount) partyBillingAmount,
		sum(party_billing_total_amount) partyBillingTotalAmount,
		sum(collections_amount) collectionsAmount,
		sum(collections_total_amount) collectionsTotalAmount,
		sum(customer_billing_amount) customerBillingAmount,
		sum(customer_billing_total_amount) customerBillingTotalAmount,
		sum(payment_amount) paymentAmount,
		sum(payment_total_amount) paymentTotalAmount,
		sum(tax_plan_amount) taxPlanAmount,
		sum(tax_real_amount) taxRealAmount,
		sum(tax_owe_amount) taxOweAmount,
		sum(tax_bearing_total_real_amount) as taxBearingTotalRealAmount,
		sum(arrears_amount) arrearsAmount,
		sum(expected_value_ton) expectedValueTon,
		sum(expected_value_square_meter) expectedValueSquareMeter,
		ifnull(sum(others_amount), 0) field02,
		sum(management_real_amount) +
		ifnull(sum(others_amount), 0) field03,
		(select count(*) from t_project c where get_year(c.contract_date)=x.year_name and
		organization_id = #{organizationId}) field04
		from (
		select t.year_name,
		t.project_id,
		sum(t.change_amount) change_amount,
		t.change_total_amount,
		t.management_plan_amount,
		sum(t.management_real_amount) management_real_amount,
		t.management_total_amount,
		t.management_owe_amount,
		sum(t.party_billing_amount) party_billing_amount,
		t.party_billing_total_amount,
		sum(t.collections_amount) collections_amount,
		t.collections_total_amount,
		sum(t.customer_billing_amount) customer_billing_amount,
		t.customer_billing_total_amount,
		sum(t.payment_amount)
		payment_amount,
		t.payment_total_amount,
		t.tax_plan_amount,
		sum(t.tax_real_amount) tax_real_amount,
		t.tax_owe_amount,
		sum(t.arrears_amount) arrears_amount,
		sum(t.expected_value_ton) expected_value_ton,
		sum(t.expected_value_square_meter) expected_value_square_meter,
		(select sum(amount) from t_collections where
		source_of='其他' and project_id=t.project_id and get_year(trice)=t.year_name)
		others_amount,tax_bearing_total_real_amount
		from (select get_year(s.contract_date)
		year_name, s.*
		from t_project_summary s
		where organization_id = #{organizationId} and project_id in (select id from
		t_project)
		order by s .serial_id desc) t
		group by t.year_name, t.project_id
		) x group by x.year_name -->
		select x.year_name field01,
		sum(contract_amount) contractAmount,
		sum(settlement_amount) settlementAmount,
		sum(change_amount) changeAmount,
		sum(change_total_amount) changeTotalAmount,
		sum(management_plan_amount) managementPlanAmount,
		sum(management_real_amount) managementRealAmount,
		sum(management_total_amount) managementTotalAmount,
		sum(management_owe_amount) managementOweAmount,
		sum(party_billing_amount) partyBillingAmount,
		sum(party_billing_total_amount) partyBillingTotalAmount,
		sum(collections_amount) collectionsAmount,
		sum(collections_total_amount) collectionsTotalAmount,
		sum(customer_billing_amount) customerBillingAmount,
		sum(customer_billing_total_amount) customerBillingTotalAmount,
		sum(payment_amount) paymentAmount,
		sum(payment_total_amount) paymentTotalAmount,
		sum(tax_plan_amount) taxPlanAmount,
		sum(tax_real_amount) taxRealAmount,
		sum(tax_owe_amount) taxOweAmount,
		sum(tax_bearing_total_real_amount) as taxBearingTotalRealAmount,
		sum(arrears_amount) arrearsAmount,
		sum(expected_value_ton) expectedValueTon,
		sum(expected_value_square_meter) expectedValueSquareMeter,
		ifnull(sum(others_amount), 0) field02,
		sum(management_real_amount) +
		ifnull(sum(others_amount), 0) field03,
		(select count(*) from t_project c where get_year(c.contract_date)=x.year_name and
		organization_id = #{organizationId}) field04
		from (
		select get_year(s.contract_date)
			year_name, s.*,(select sum(amount) from t_collections where
			source_of='其他' and project_id=s.project_id and get_year(trice)=get_year(s.contract_date))
			others_amount
			from t_project_summary s
			where organization_id = #{organizationId} and serial_id in (select max(serial_id) from t_project_summary group by project_id)
			 and project_id in (select id from t_project)
		) x group by x.year_name
	</select>
	
	<!-- 年度汇总报表明细yeardetail-->
	<select id="getSummaryByYearDetail" resultType="ProjectSummary">
		select
		id,serial_id as serialId,trice,description,project_id as projectId,
		organization_id as organizationId,project_code projectCode,
		project_name projectName,(select manager from t_project where id=t.project_id)  field03,
		contract_tax_rate as contractTaxRate,contract_type as contractType,
		contract_amount as contractAmount,sum(change_amount) as changeAmount,
		change_total_amount as changeTotalAmount,settlement_amount as settlementAmount,
		management_rate as managementRate,management_plan_amount as managementPlanAmount,
		(select ifnull(sum(amount),0) from t_collections where source_of = '管理费' and project_id = t.project_id and get_year(create_time) = #{p1}) as managementRealAmount,
		(select ifnull(sum(amount),0) from t_collections where source_of = '管理费' and project_id=t.project_id) as managementTotalAmount,
		management_owe_amount as managementOweAmount,party_billing_amount as partyBillingAmount,
		party_billing_total_amount as partyBillingTotalAmount,party_billing_output_tax_amount as partyBillingOutputTaxAmount,
		sum(collections_amount) as collectionsAmount,collections_total_amount as collectionsTotalAmount,
		collections_total_project_amount as collectionsTotalProjectAmount,collections_total_income_amount as collectionsTotalIncomeAmount,
		collections_rate as collectionsRate,customer_billing_amount as customerBillingAmount,
		customer_billing_total_amount as customerBillingTotalAmount,customer_billing_input_tax_amount as customerBillingInputTaxAmount,
		sum(payment_amount) as paymentAmount,payment_total_amount as paymentTotalAmount,
		(select ifnull(sum(amount),0) from t_payment_different_tax_amount where payment_id in (select distinct id from t_payment where project_id =t.project_id) 
		and get_year(create_time) = #{p1}) as paymentDifferentTaxAmount,
		tax_rate as taxRate, tax_bearing_amount as taxBearingAmount,tax_plan_amount as taxPlanAmount,sum(tax_real_amount) as taxRealAmount,
		tax_total_amount as taxTotalAmount,tax_owe_amount as taxOweAmount,
		sum(arrears_amount) as arrearsAmount,sum(expected_value_ton) as expectedValueTon,
		sum(expected_value_square_meter) as expectedValueSquareMeter,profile_point as profilePoint,
		ifnull(total_others_amount, 0) field01,sum(management_real_amount) + ifnull(total_others_amount, 0) field02,
		version, create_time as createTime, table_name as tableName, contract_date as contractDate, 
		tax_bearing_rate as taxBearingRate, vat_additional_coefficient as vatAdditionalCoefficient, 
		(select ifnull(sum(amount),0) from t_payment where get_year(create_time) = #{p1}
		and project_id = t.project_id and payment_item_id='070de123-e839-43ab-84b8-3705d6d03bd1') as taxBearingRealAmount, 
		tax_bearing_total_real_amount as taxBearingTotalRealAmount, collections_total_project_amount as collectionsTotalProjectAmount, 
		collections_total_income_amount as collectionsTotalIncomeAmount, collections_total_other_amount as collectionsTotalOtherAmount, 
		payment_total_different_tax_amount as paymentTotalDifferentTaxAmount
		from (
		select
		s.*,(select sum(amount) from t_collections where source_of='其他' and project_id=s.project_id) total_others_amount from
		t_project_summary s
		where get_year(s.contract_date) = #{p1}
		and organization_id = #{organizationId} and serial_id in (select max(serial_id) from t_project_summary group by project_id)
		 and project_id in (select id from t_project)
		order by s.serial_id desc
		) t
		group by project_id order by field_02,CAST(field_03 AS decimal(20,4))
	</select>

	<!-- 输出当月的统计表 -->
	<select id="getProjectSummaryByMonth" resultType="ProjectSummary">
		select
		id,
		serial_id as serialId,
		trice,
		description,
		project_id projectId,
		organization_id organizationId,
		project_code as projectCode,
		project_name projectName,
		contract_amount contractAmount,
		sum(change_amount) as changeAmount,
		change_total_amount as changeTotalAmount,
		settlement_amount as settlementAmount,
		management_rate as managementRate,
		management_plan_amount as managementPlanAmount,
		sum(management_real_amount) as
		managementRealAmount,
		management_total_amount as managementTotalAmount,
		management_owe_amount as managementOweAmount,
		sum(party_billing_amount) as partyBillingAmount,
		party_billing_total_amount as partyBillingTotalAmount,
		sum(collections_amount) as collectionsAmount,
		collections_total_amount as collectionsTotalAmount,
		collections_rate as
		collectionsRate,
		sum(customer_billing_amount) as customerBillingAmount,
		customer_billing_total_amount as
		customerBillingTotalAmount,
		sum(payment_amount) as paymentAmount,
		payment_total_amount as paymentTotalAmount,
		tax_rate as
		taxRate,
		tax_plan_amount as taxPlanAmount,
		sum(tax_real_amount) as taxRealAmount,
		tax_total_amount as taxTotalAmount,
		tax_owe_amount as taxOweAmount,
		sum(arrears_amount) as arrearsAmount,
		sum(expected_value) as expectedValue,
		(select profile_point from t_profile where project_id=t.project_id and get_year(trice) = get_year(now())) as profilePoint,
		ifnull(total_others_amount, 0) field01,
		sum(management_real_amount) +
		ifnull(total_others_amount, 0) field02,
		version,
		create_time as createTime,
		table_name as tableName
		from (
		select
		s.*,(select sum(amount) from t_collections where source_of='其他' and project_id=s.project_id
		  and DATE_FORMAT(trice,'%Y-%m') = #theMont
		) total_others_amount from
		t_project_summary s
		where organization_id = #{organizationId} and get_this_month(project_id, #theMonth) = 1
		order by
		s.serial_id desc
		) t
		group by project_id order by field_02,CAST(field_03 AS decimal(20,4))
	</select>
</mapper>

