/**
  * @ cqiyi create in 2014-12-8 6:26:38 by Template
  * This class generated by Forever Web Rapid Framework Code Generator
  */

package hply.domain;

import java.io.Serializable;
import java.text.MessageFormat;
import java.util.Date;

import org.apache.commons.lang3.StringUtils;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.format.annotation.DateTimeFormat.ISO;

/**
  * 数据表： [t_sys_exec_log]
  * 存储过程执行日志表
  */
public class SysExecLog implements Serializable {
    
    	/**
	 * 
	 */
	private static final long serialVersionUID = 3274517304075587068L;
		/*
    	 * 
    	 */
        public static final String FIELD_SERIAL_ID = "serial_id";
    	/*
    	 * 每次在同一批次中执行
    	 */
        public static final String FIELD_EXEC_NO = "exec_no";
    	/*
    	 * 
    	 */
        public static final String FIELD_PROC_NAME = "proc_name";
    	/*
    	 * 
    	 */
        public static final String FIELD_TRICE = "trice";
    	/*
    	 * 
    	 */
        public static final String FIELD_EXEC_LOG = "exec_log";
    	/*
    	 * 
    	 */
        public static final String FIELD_CREATE_TIME = "create_time";
    	/*
    	 * 预留字段01
    	 */
        public static final String FIELD_FIELD_01 = "field_01";
    	/*
    	 * 预留字段02
    	 */
        public static final String FIELD_FIELD_02 = "field_02";
    	/*
    	 * 预留字段03
    	 */
        public static final String FIELD_FIELD_03 = "field_03";
    	/*
    	 * 预留字段04
    	 */
        public static final String FIELD_FIELD_04 = "field_04";
    	/*
    	 * 预留字段05
    	 */
        public static final String FIELD_FIELD_05 = "field_05";

	/*
	 * 默认构造函数
	 */
	public SysExecLog() {
        this.trice = new Date(); 
        this.createTime = new Date(); 
	}

    /**
      * [serial_id]，
      * 
      */
      
      private Integer serialId;
      
    /**
      * [exec_no]，
      * 每次在同一批次中执行
      */
      
      private String execNo;
      
    /**
      * [proc_name]，
      * 
      */
      
      private String procName;
      
    /**
      * [trice]，
      * 
      */
      @DateTimeFormat(iso=ISO.DATE)
      private Date trice;
      
    /**
      * [exec_log]，
      * 
      */
      
      private String execLog;
      
    /**
      * [create_time]，
      * 
      */
      @DateTimeFormat(iso=ISO.DATE)
      private Date createTime;
      
    /**
      * [field_01]，
      * 预留字段01
      */
      
      private String field01;
      
    /**
      * [field_02]，
      * 预留字段02
      */
      
      private String field02;
      
    /**
      * [field_03]，
      * 预留字段03
      */
      
      private String field03;
      
    /**
      * [field_04]，
      * 预留字段04
      */
      
      private String field04;
      
    /**
      * [field_05]，
      * 预留字段05
      */
      
      private String field05;
      
    
    /**
      * [serial_id] getter，
      * 
      */
    	public Integer getSerialId () {
    		return this.serialId;
    	}

    /**
      * [serial_id] setter，
      * 
      */
    	public void setSerialId(Integer serialId) {
    		this.serialId = serialId;
    	}
    /**
      * [exec_no] getter，
      * 每次在同一批次中执行
      */
    	public String getExecNo () {
    		return this.execNo;
    	}

    /**
      * [exec_no] setter，
      * 每次在同一批次中执行
      */
    	public void setExecNo(String execNo) {
    		this.execNo = execNo;
    	}
    /**
      * [proc_name] getter，
      * 
      */
    	public String getProcName () {
    		return this.procName;
    	}

    /**
      * [proc_name] setter，
      * 
      */
    	public void setProcName(String procName) {
    		this.procName = procName;
    	}
    /**
      * [trice] getter，
      * 
      */
    	public Date getTrice () {
    		return this.trice;
    	}

    /**
      * [trice] setter，
      * 
      */
    	public void setTrice(Date trice) {
    		this.trice = trice;
    	}
    /**
      * [exec_log] getter，
      * 
      */
    	public String getExecLog () {
    		return this.execLog;
    	}

    /**
      * [exec_log] setter，
      * 
      */
    	public void setExecLog(String execLog) {
    		this.execLog = execLog;
    	}
    /**
      * [create_time] getter，
      * 
      */
    	public Date getCreateTime () {
    		return this.createTime;
    	}

    /**
      * [create_time] setter，
      * 
      */
    	public void setCreateTime(Date createTime) {
    		this.createTime = createTime;
    	}
    /**
      * [field_01] getter，
      * 预留字段01
      */
    	public String getField01 () {
    		return this.field01;
    	}

    /**
      * [field_01] setter，
      * 预留字段01
      */
    	public void setField01(String field01) {
    		this.field01 = field01;
    	}
    /**
      * [field_02] getter，
      * 预留字段02
      */
    	public String getField02 () {
    		return this.field02;
    	}

    /**
      * [field_02] setter，
      * 预留字段02
      */
    	public void setField02(String field02) {
    		this.field02 = field02;
    	}
    /**
      * [field_03] getter，
      * 预留字段03
      */
    	public String getField03 () {
    		return this.field03;
    	}

    /**
      * [field_03] setter，
      * 预留字段03
      */
    	public void setField03(String field03) {
    		this.field03 = field03;
    	}
    /**
      * [field_04] getter，
      * 预留字段04
      */
    	public String getField04 () {
    		return this.field04;
    	}

    /**
      * [field_04] setter，
      * 预留字段04
      */
    	public void setField04(String field04) {
    		this.field04 = field04;
    	}
    /**
      * [field_05] getter，
      * 预留字段05
      */
    	public String getField05 () {
    		return this.field05;
    	}

    /**
      * [field_05] setter，
      * 预留字段05
      */
    	public void setField05(String field05) {
    		this.field05 = field05;
    	}
    
	@Override
	public String toString() {
		System.out.println(this.getClass().getName() + ".toString():");
        
        String str = StringUtils.EMPTY;
        str += MessageFormat.format("SerialId=\"{0}\",", this.getSerialId());
        str += MessageFormat.format("ExecNo=\"{0}\",", StringUtils.trimToEmpty(this.getExecNo()));
        str += MessageFormat.format("ProcName=\"{0}\",", StringUtils.trimToEmpty(this.getProcName()));
        str += MessageFormat.format("Trice=\"{0}\",", this.getTrice());
        str += MessageFormat.format("ExecLog=\"{0}\",", StringUtils.trimToEmpty(this.getExecLog()));
        str += MessageFormat.format("CreateTime=\"{0}\",", this.getCreateTime());
        str += MessageFormat.format("Field01=\"{0}\",", StringUtils.trimToEmpty(this.getField01()));
        str += MessageFormat.format("Field02=\"{0}\",", StringUtils.trimToEmpty(this.getField02()));
        str += MessageFormat.format("Field03=\"{0}\",", StringUtils.trimToEmpty(this.getField03()));
        str += MessageFormat.format("Field04=\"{0}\",", StringUtils.trimToEmpty(this.getField04()));
        str += MessageFormat.format("Field05=\"{0}\",", StringUtils.trimToEmpty(this.getField05()));;
        return str;
                        
	}
}

