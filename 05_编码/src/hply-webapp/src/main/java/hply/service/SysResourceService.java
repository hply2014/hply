/**
 * @Template info: 2013/08/16, Chengqiyi.
 * ChengQiyi create in 2014/7/8 14:30:21
 * This class generated by CodeSmith Generator
 */

package hply.service;

import hply.domain.SysResource;
import hply.domain.TreeNode;
import hply.persistence.SysResourceMapper;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Repository;

@Repository(value = "sysResourceService")
public class SysResourceService {

	private final static String ROOT_PARENT_ID = "root";

	@Resource(name = "sysResourceMapper")
	private SysResourceMapper sysResourceMapper;

	public void insert(SysResource sysResource) {
		sysResourceMapper.insert(sysResource);
	}

	public void update(SysResource sysResource) {
		sysResourceMapper.update(sysResource);

	}

	public void delete(String id) {
		sysResourceMapper.delete(id);
	}

	public SysResource get(String id) {
		return sysResourceMapper.get(id);
	}

	public List<SysResource> getChildren(String id) {
		return sysResourceMapper.getChildren(id);
	}

	private static List<SysResource> all = null;

	public List<SysResource> getAll() {

		return sysResourceMapper.getAll();

		// if (all == null) {
		// all = sysResourceMapper.getAll();
		// System.out.println("all.size()=" + all.size());
		// }
		// return all;
	}

	private int count = 0;

	public TreeNode getTreeRoot(String userId) {
		TreeNode root = new TreeNode();
		root.setId(ROOT_PARENT_ID);
		count = 0;

		getTreeNodeList(userId, root);

		return root;
	}

	public List<TreeNode> getTreeNodeList(String userId, TreeNode root) {
		List<SysResource> listR = this.getChildren(root.getId());
		List<TreeNode> listT = new ArrayList<TreeNode>();
		for (SysResource r : listR) {
			TreeNode node = new TreeNode();
			System.out.println((++count) + "," + r.toString());

			node.setId(r.getId());
			node.setTitle(r.getResname());
			node.setKey(r.getRescode());
			node.setIcon(r.getIcon());
			node.setUrl(r.getResurl());
			node.setExpanded(true);
			node.setSelected(true);
			node.setTooltip(r.getDescription());

			node.setParent(root);
			listT.add(node);

			node.setChildren(getTreeNodeList(userId, node));
		}

		return listT;
	}
}
