<%-- 
Author: ChengQiyi

Create time:2013年8月16日 13:51:47
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="XML" Inherits="" Debug="False" Description="Template description here." %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="选择源表." %> 
<%@ Property Name="NameSpace" Type="System.String" Default="hply.persistence" Optional="False" Category="Context" Description="" Editor="" EditorBase="" Serializer="" %>
<%@ Property Name="Author" Type="System.String" Default="ChengQiyi" Optional="False" Category="Author" Description="" Editor="" EditorBase="" Serializer="" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System" %>
<%@ Import Namespace="System" %>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="<%=NameSpace%>.<%=GetClassName()%>Mapper">

  <cache />

  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="<%=GetClassName()%>">
    <%=GetInsertSQL()%>
  </insert>

  <update id="update" parameterType="map">
    <%=GetUpdateSQL()%>
  </update>

  <delete id="delete">
    delete from <%=SourceTable.Name%> where id = #{id}
  </delete>

  <select id="get" parameterType="string" resultType="<%=GetClassName()%>">
    select * from <%=SourceTable.Name%> where id = #{id}
  </select>

  <select id="getAll" resultType="<%=GetClassName()%>">
    select * from <%=SourceTable.Name%>
  </select>

</mapper>


<script runat="template">
public string TrimStart(string str1, string str2)
{
	return str1.Replace(str2, "");
}

public string ReformatString(string dbObjName, bool up)
{
	string[] arr = dbObjName.Split('_');
	string s = string.Empty;
	for(int i=0; i<arr.Length; i++)
	{
		if(arr[i].Length == 0) continue;
		string fChr = arr[i][0] + string.Empty;
		s += (up || i>0 ? fChr.ToUpper() : fChr.ToLower()) + arr[i].Substring(1).ToLower();
	}
	return s;
}

	
public string GetClassName()
{
	string n = SourceTable.Name;
	if(n.StartsWith("t_"))
	{
		n = n.Substring(2);		
	}
	return ReformatString(n, true);
}

public string GetClassName1()
{
	string n = SourceTable.Name;
	if(n.StartsWith("t_"))
	{
		n = n.Substring(2);		
	}
	return ReformatString(n, false);
}

public string GetInsertSQL()
{
	string f = string.Empty;
	string v = string.Empty;
	
	for(int i=0; i<SourceTable.Columns.Count; i++)
	{
		f += SourceTable.Columns[i].Name +", ";
		v +=  "#{" + SourceTable.Columns[i].Name +"}, ";
	}
	
	return string.Format("insert into {0}({1}) values ( {2} )", SourceTable.Name, f.Trim().TrimEnd(','),  v.Trim().TrimEnd(','));
}

public string GetUpdateSQL()
{
	string s = string.Empty;
	
	for(int i=0; i<SourceTable.Columns.Count; i++)
	{
		if(SourceTable.Columns[i].Name.ToUpper() != "ID")
        {
			s += string.Format("{0} = #{{{0}}}, ", SourceTable.Columns[i].Name);
		}
	}
	
	return string.Format("update {0} set {1} where id = #{{id}}", SourceTable.Name, s.TrimEnd(", ".ToCharArray()));
}
</script>