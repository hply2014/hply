<%-- 
Author: ChengQiyi

Create time:2013年8月16日 13:51:47
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Java" Inherits="" Debug="False" Description="Template description here." %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the stored procedures should be based on." %> 
<%@ Property Name="NameSpace" Type="System.String" Default="hply.domain" Optional="False" Category="" Description="" Editor="" EditorBase="" Serializer="" %>
<%@ Property Name="Author" Type="System.String" Default="ChengQiyi" Optional="False" Category="Author" Description="" Editor="" EditorBase="" Serializer="" %>
<%@ Map Name="JavaAlias" Src="MySQL-JavaAlias" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System" %>
<%@ Import Namespace="System" %>
/**
  * @ <%=Author%> create in <%=System.DateTime.Now%> by Template at 2014年6月25日21:26:55
  * This class generated by CodeSmith Generator
  */

package <%=NameSpace%>;

import java.io.Serializable;
import java.util.Date;
import java.text.MessageFormat;
import hply.common.Utility;


/**
  * 模型类，对应的数据库表： [<%=SourceTable.Name%>]
  * <%=SourceTable.Description%>
  */
public class <%=GetClassName()%> implements Serializable {
		<%
		foreach(ColumnSchema cs in SourceTable.Columns)
		{
		%>
        
  private <%=GetColumnType(cs)%> <%=GetColumnName1(cs)%>;
  
/**
  * 读，数据库列：<%=TrimStart(cs.Name, "CQIYI.")%>  
  * <%=cs.Description%>
  */
	public <%=GetColumnType(cs)%> get<%=GetColumnName(cs)%>() {
		return <%=GetColumnName1(cs)%>;
	}

/**
  * 写，数据库列：<%=TrimStart(cs.Name, "CQIYI.")%>  
  * <%=cs.Description%>
  */
	public void set<%=GetColumnName(cs)%>(<%=GetColumnType(cs)%> <%=GetColumnName1(cs)%>) {
		this.<%=GetColumnName1(cs)%> = <%=GetColumnName1(cs)%>;
	}
		
		<%}%>
        
    @Override
	public String toString() {
		System.out.println(this.getClass().getName() + ".toString():");
        
        String str = Utility.EMPTY_STRING;<%
		foreach(ColumnSchema cs in SourceTable.Columns)
		{%>
        str += MessageFormat.format("\t<%=GetColumnName(cs)%>=\"{0}\"\n", this.get<%=GetColumnName(cs)%>());<%}%>;
        return str;
                        
	}
    
//======================================================================================
// TODO: 附加的其他方法 （ <%=NameSpace%>.<%=GetClassName()%> ）
//======================================================================================


}

<script runat="template">
public string TrimStart(string str1, string str2)
{
	return str1.Replace(str2, "");
}

public string ReformatString(string dbObjName, bool up)
{
	string[] arr = dbObjName.Split('_');
	string s = string.Empty;
	for(int i=0; i<arr.Length; i++)
	{
		if(arr[i].Length == 0) continue;
		string fChr = arr[i][0] + string.Empty;
		s += (up || i>0 ? fChr.ToUpper() : fChr.ToLower()) + arr[i].Substring(1).ToLower();
	}
	return s;
}

	
public string GetClassName()
{
	string n = SourceTable.Name;
	if(n.StartsWith("t_"))
	{
		n = n.Substring(2);		
	}
	return ReformatString(n, true);
}

public string GetColumnType(ColumnSchema col)
{
    /*
	string strType = string.Empty;
	if(col.NativeType == "varchar")
    {
		strType = "String";
	}
    else if(col.NativeType == "datetime")
    {
		strType = "Date";
	}
    else{
	    strType = col.NativeType;
	}
    */
    
    string strType = JavaAlias[col.NativeType];
    
    return strType;
}

public string GetColumnName(ColumnSchema col)
{
	return ReformatString(col.Name, true);
}


public string GetColumnName1(ColumnSchema col)
{
	return ReformatString(col.Name, false);
}

public string GetJdbcMySQLType(ColumnSchema col)
{
    string t = GetColumnType(col);
	return (t[0] + string.Empty).ToUpper() + t.Substring(1);
}
</script>