<%-- 
Author: ChengQiyi

Create time:2013年8月16日 13:51:47
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Java" Inherits="" Debug="False" Description="Template description here." %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="选择源表." %> 
<%@ Property Name="NameSpace" Type="System.String" Default="hply.persistence" Optional="False" Category="Context" Description="" Editor="" EditorBase="" Serializer="" %>
<%@ Property Name="Author" Type="System.String" Default="ChengQiyi" Optional="False" Category="Author" Description="" Editor="" EditorBase="" Serializer="" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System" %>
<%@ Import Namespace="System" %>
/**
  * @Template info: 2013/08/16, Chengqiyi.
  * <%=Author%> create in <%=System.DateTime.Now%>
  * This class generated by CodeSmith Generator
  */

package <%=NameSpace%>;

import java.util.List;
import java.util.Map;
import org.springframework.stereotype.Repository;
import hply.domain.<%=GetClassName()%>;

@Repository(value = "<%=GetClassName1()%>Mapper")
public interface <%=GetClassName()%>Mapper {

	  public void insert(<%=GetClassName()%> <%=GetClassName1()%>);
	  
	  public void update(<%=GetClassName()%> <%=GetClassName1()%>);
	  
	  public void delete(String id);
	  
	  public <%=GetClassName()%> get(String id);
	  
	  public List<<%=GetClassName()%>> getAll();
}


<script runat="template">

 public override string GetFileName()
{
    return GetClassName() + "Mapper.java";
}
public string TrimStart(string str1, string str2)
{
	return str1.Replace(str2, "");
}

public string ReformatString(string dbObjName, bool up)
{
	string[] arr = dbObjName.Split('_');
	string s = string.Empty;
	for(int i=0; i<arr.Length; i++)
	{
		if(arr[i].Length == 0) continue;
		string fChr = arr[i][0] + string.Empty;
		s += (up || i>0 ? fChr.ToUpper() : fChr.ToLower()) + arr[i].Substring(1).ToLower();
	}
	return s;
}

	
public string GetClassName()
{
	string n = SourceTable.Name;
	if(n.StartsWith("t_"))
	{
		n = n.Substring(2);		
	}
	return ReformatString(n, true);
}

public string GetClassName1()
{
	string n = SourceTable.Name;
	if(n.StartsWith("t_"))
	{
		n = n.Substring(2);		
	}
	return ReformatString(n, false);
}
</script>