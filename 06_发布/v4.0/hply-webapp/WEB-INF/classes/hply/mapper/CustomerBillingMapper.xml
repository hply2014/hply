<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hply.mapper.CustomerBillingMapper">

  <!-- <cache /> -->
  
  <select id="getAllByProject" resultType="CustomerBilling">
    select id as id, project_id as projectId, invoice_code as invoiceCode, invoice_type as invoiceType, amount as amount, tax_rate as taxRate, input_tax_amount as inputTaxAmount, invoice_amount as invoiceAmount, trice as trice, is_auto_create_payment as isAutoCreatePayment, create_time as createTime, create_user as createUser, update_time as updateTime, update_user as updateUser, description as description, version as version, status as status, field_01 as field01, field_02 as field02, field_03 as field03, field_04 as field04, field_05 as field05 from t_customer_billing where project_id=#{projectId} order by trice desc
  </select>
  
  <select id="getRowCountByOrganization" resultType="int">
    select count(*) from t_customer_billing t where exists (select 0 from t_project p where t.project_id=p.id and p.organization_id=#{organizationId})
  </select>

  <select id="getAllPagedByOrganization" resultType="CustomerBilling">
    select id as id, project_id as projectId, invoice_code as invoiceCode, invoice_type as invoiceType, amount as amount, tax_rate as taxRate, input_tax_amount as inputTaxAmount, invoice_amount as invoiceAmount, trice as trice, is_auto_create_payment as isAutoCreatePayment, create_time as createTime, create_user as createUser, update_time as updateTime, update_user as updateUser, description as description, version as version, status as status, field_01 as field01, field_02 as field02, field_03 as field03, field_04 as field04, field_05 as field05 from t_customer_billing t where exists (select 0 from t_project p where t.project_id=p.id and p.organization_id=#{organizationId}) order by trice desc limit #{pageSize} offset #{pageIndex}
  </select>
  
  <select id="getGroupByProject" resultType="map">
    select tcb.*,(select tcb.`invoiceAmount`/IF(`settlement_amount` > 0, `settlement_amount`, `contract_amount` + `change_total_amount`) from t_project_summary 
		where `project_id`=#{projectId} order by serial_id desc limit 1) as `invoiceAmountRate`
		from (select `project_id` as projectId,`invoice_type` as `invoiceType`, sum(`amount`) as `amount`, sum(`input_tax_amount`) as `inputTaxAmount`, sum(`invoice_amount`) as `invoiceAmount` from `t_customer_billing` 
		where `project_id`=#{projectId} and ifnull(`invoice_type`,'') != '' group by `invoice_type`) tcb
		order by tcb.`invoiceType` desc
  </select>
  
</mapper>

